package main

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/aws/aws-lambda-go/events"
)

func TestEmptyRequest(test *testing.T) {
	resp, err := Handler(events.APIGatewayProxyRequest{})

	assert.Equal(test, 500, resp.StatusCode)

	assert.Error(test, err)
	assert.EqualError(test, err, "unexpected end of JSON input")
}

func TestEmptyQuery(test *testing.T) {
	req := requestBody{}
	reqString, _ := json.Marshal(req)
	resp, err := Handler(events.APIGatewayProxyRequest{
		Body: string(reqString),
	})

	assert.Equal(test, 400, resp.StatusCode)

	assert.Error(test, err)
	assert.EqualError(test, err, "Must provide an operation.")
}

func TestWrongQuery(test *testing.T) {
	req := requestBody{
		Query: `query {
			makingNoSense {
				field
			}
		}`,
	}
	reqString, _ := json.Marshal(req)
	resp, err := Handler(events.APIGatewayProxyRequest{
		Body: string(reqString),
	})

	assert.Equal(test, 400, resp.StatusCode)

	assert.Error(test, err)
	assert.EqualError(test, err, "Cannot query field \"makingNoSense\" on type \"Query\".")
}
